
package ftpTransfer;

import java.io.File;
import java.io.IOException;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Kamindu
 * @Written ‎August ‎‎2012
 * @required FileClient.java
 */
public class SelectFiles extends javax.swing.JFrame {

    private static final Logger log = Logger.getLogger(SelectFiles.class.getName());
    private FileClient client;
    private ArrayList filepaths = new ArrayList();

    /**
     * Creates new form testing
     */
    public SelectFiles() {
        initComponents();
        setLocationRelativeTo(null);
        client = new FileClient();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOpen = new javax.swing.JButton();
        txtAdd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblFileName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblFileSize = new javax.swing.JLabel();
        lblArraySize = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFiles = new javax.swing.JList();
        btnTransfer = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        progFiles = new javax.swing.JProgressBar();
        btnSelectAll = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        joptExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File open");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));

        btnOpen.setText("open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        jLabel1.setText("File Name");

        jLabel2.setText("File Size");

        lstFiles.setToolTipText("File(s) selected");
        jScrollPane1.setViewportView(lstFiles);

        btnTransfer.setText("Transfer Files");
        btnTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setToolTipText("Clear the List");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSelectAll.setText("Select All");
        btnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });

        jLabel3.setText("Status");

        jMenu1.setText("Start");

        joptExit.setText("Exit");
        joptExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joptExitActionPerformed(evt);
            }
        });
        jMenu1.add(joptExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAdd)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOpen)
                        .addGap(23, 23, 23))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblArraySize, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(56, 56, 56)
                                .addComponent(lblFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnClear)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSelectAll))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(progFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 28, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(72, 72, 72)
                                .addComponent(lblFileSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnTransfer)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOpen)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFileSize, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblArraySize, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnSelectAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTransfer)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed

        //what type of files to be send is filtered
        JFileChooser fo = new JFileChooser();
        //fo.setFileSelectionMode(2);
        fo.setMultiSelectionEnabled(true);
        FileFilter filter = new FileNameExtensionFilter("Text files", "txt");
        fo.addChoosableFileFilter(filter);

        filter = new FileNameExtensionFilter("E-books", "epub", "xps", "pdf");
        fo.addChoosableFileFilter(filter);

        filter = new FileNameExtensionFilter("Pictures", "jpg", "PNG");
        fo.addChoosableFileFilter(filter);

        filter = new FileNameExtensionFilter("Archives", "zip", "rar");
        fo.addChoosableFileFilter(filter);

        int returnvalue = fo.showOpenDialog(this);

        if (returnvalue == JFileChooser.APPROVE_OPTION) {

            //  File temp=fo.getSelectedFile();
            final File[] sel = fo.getSelectedFiles();
            File temp = sel[0];

            if (temp.isDirectory()) {
                System.out.println("directory");
                txtAdd.setText(temp.getParent());
            }

            if (temp.isFile()) {
                txtAdd.setText(temp.getAbsolutePath());
            }

            log.log(Level.CONFIG, "{0}Files selected", sel.length);
            //System.out.println(sel.length+ "Files selected");
            log.log(Level.FINE, fo.getCurrentDirectory().toString());
            //System.out.println(fo.getCurrentDirectory());
            log.log(Level.FINE, temp.getParentFile().getName());
            //System.out.println(temp.getParentFile().getName());

          //  System.out.println("parent dir  "+sel[0].getCanonicalPath());
            DefaultListModel list = new DefaultListModel();
            File file;
            for (File sel1 : sel) {
                file = sel1;
                if (file.isFile()) {
                    log.log(Level.FINE, file.getName() + " " + file.getAbsolutePath());
                    //System.out.println(file.getName()+" "+file.getAbsolutePath());
                    list.addElement(file.getName());
                    filepaths.add(file.getAbsolutePath());

                }
                if (file.isDirectory()) {

                    String[] t = file.list();
                    for (String t1 : t) {
                        System.out.println(t1);
                        list.addElement(t1);
                    }

                }
            }
            lstFiles.setModel(list);

            lstFiles.addListSelectionListener(new ListSelectionListener() {

                @Override
                public void valueChanged(ListSelectionEvent e) {
                    System.out.println(lstFiles.getSelectedValue() + " " + lstFiles.getSelectedIndex());

                    if (!(lstFiles.isSelectionEmpty())) {

                        File temp = sel[lstFiles.getSelectedIndex()];
                        lblFileName.setText(temp.getName());

                        lblFileSize.setText(String.valueOf(temp.length()) + " bytes, " + String.valueOf(temp.length() / 1024) + " KB " + String.valueOf(temp.length() / 1024 / 1024.0) + " MB");
                        byte[] mybytearray = new byte[(int) temp.length()];
                        lblArraySize.setText(String.valueOf(mybytearray.length) + ", to parts " + String.valueOf((mybytearray.length) / 1024.0));
                    }

                }
            });

            JOptionPane.showMessageDialog(this, sel.length + " File(s) selected.");
        }


    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferActionPerformed

        final int[] list = lstFiles.getSelectedIndices();
        progFiles.setMaximum(list.length);

        client.setFileCount(list.length);

        progFiles.setStringPainted(true);
        //create a user thread to send the files so that the GUI wil be able to update properly
        Thread th = new Thread(new Runnable() {

            @Override
            public void run() {

                if (!(lstFiles.isSelectionEmpty())) {

                    for (int i = 0; i < list.length; i++) {

                        System.out.println(list[i]);
                        System.out.println(filepaths.get(list[i]));
                        System.out.println("transfering -> " + filepaths.get(list[i]).toString());

         // progFiles.setValue(i+1); 
                        client.connectFTP();//connect with the client

                        try {

                            client.sendFile(filepaths.get(list[i]).toString());//actual sending of file

                            progressbarUpdate(i);
             //   progFiles.setString("Transferring file "+(i+1));

                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null, "File Transfer error", "Error", 0);
                            System.out.println("Transfer error " + ex);
                        }

                    }
                    JOptionPane.showMessageDialog(null, "File Transfer Complete", "Done", 1);
                    progFiles.setValue(progFiles.getMinimum());
                    progFiles.setString(" ");
                } else {

                    JOptionPane.showMessageDialog(null, "Select Files to transfer", "No files Selected", 2);
                }

            }
        });
        th.start();


    }//GEN-LAST:event_btnTransferActionPerformed

    private void progressbarUpdate(final int i) {//progress bar updates. this is in gui thread so no update probkems occurs
        progFiles.setValue(i + 1);
        progFiles.setString("Transferring file " + (i + 1));

    }


    private void joptExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joptExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_joptExitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed

        lstFiles.clearSelection();
        progFiles.setValue(0);

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllActionPerformed

        lstFiles.setSelectionInterval(0, lstFiles.getModel().getSize() - 1);
    }//GEN-LAST:event_btnSelectAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SelectFiles().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSelectAll;
    private javax.swing.JButton btnTransfer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem joptExit;
    private javax.swing.JLabel lblArraySize;
    private javax.swing.JLabel lblFileName;
    private javax.swing.JLabel lblFileSize;
    private javax.swing.JList lstFiles;
    private javax.swing.JProgressBar progFiles;
    private javax.swing.JTextField txtAdd;
    // End of variables declaration//GEN-END:variables
}
